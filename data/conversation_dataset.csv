input,output
why do SaaS companies prefer long-term contracts over short-term ones,"I sometimes wonder if companies that buy software would be better off signing ten-year contracts rather than one-year contracts.Typically, it’s buyers who want to sign short-term deals and sellers who want long-term ones. Go to almost any pricing page for a modern SaaS company, and you'll see two prices : 1 A big, bold one, which you'll pay if you're billed annually, and a small, higher one, which you'll pay if you're billed monthly. 2 And if you talk to any software vendor about signing an annual contract, they'll probably give a third option for a multi-year deal, which will have the lowest price of the three.The logic behind this sort of discounting is straightforward. For SaaS vendors, cash commitments are king. The entire business model is built around customers staying customers for a while and, to a lesser degree, up-front payments . Long-term deals offer both of these things. 3 Moreover, in some sense, annual contracts are less work to maintain than monthly ones. If a company knows that a customer will be a customer for the next year, they don’t have to renew that customer’s business every month. For all these reasons, getting 10,000 dollars today is better than probably getting 1,000 dollars a month for the next 12 months, and SaaS companies often offer people that deal."
why do SaaS companies prefer long-term contracts over short-term ones,"The logic behind this sort of discounting is straightforward. For SaaS vendors, cash commitments are king. The entire business model is built around customers staying customers for a while and, to a lesser degree, up-front payments . Long-term deals offer both of these things. 3 Moreover, in some sense, annual contracts are less work to maintain than monthly ones. If a company knows that a customer will be a customer for the next year, they don’t have to renew that customer’s business every month. For all these reasons, getting 10,000 dollars today is better than probably getting 1,000 dollars a month for the next 12 months, and SaaS companies often offer people that deal.They also offer the deal because buyers prefer short-term contracts. Buyers don’t want commitment; they want flexibility. What if they discover some hidden flaw in the product they bought? What if something about their business changes, and they no longer want to use it? What if a competitor launches a shiny new thing that they really like ? If they’re on a month-to-month contract, they can simply walk away. But if they’re on a long-term contract, they can’t. They can’t credibly demand that the vendor fix whatever thing they don’t like, “or else.” They can stop using the product, but they can’t stop paying for it . They’re locked in.And so, people say , when possible, avoid it . Avoid long-term contracts. Month-to-month is better than an annual commitment; annual is better than multi-year; literally anything is better than ten years."
why is the data industry overly focused on tooling instead of solving core problems?,"And so, people say , when possible, avoid it . Avoid long-term contracts. Month-to-month is better than an annual commitment; annual is better than multi-year; literally anything is better than ten years.—But is it? One of the common complaints that data people have about the state of the data industry today is that it’s too focused on tooling. We speculate on the implications of Snowflake’s launches and Databricks’ acquisitions ; we waste time trying to define the endless flavors of business intelligence ; we talk about Modern Data Stack this and AI that. As the memes say , this is all a fun distraction from what we actually need to do: Fix people and process problems. Teams don’t need to optimize the handles on their hammers or the nuances of their nails; they need to become better carpenters. The magic we’re looking for is in the work we’re avoiding."
why is the data industry overly focused on tooling instead of skills and processes,"But is it? One of the common complaints that data people have about the state of the data industry today is that it’s too focused on tooling. We speculate on the implications of Snowflake’s launches and Databricks’ acquisitions ; we waste time trying to define the endless flavors of business intelligence ; we talk about Modern Data Stack this and AI that. As the memes say , this is all a fun distraction from what we actually need to do: Fix people and process problems. Teams don’t need to optimize the handles on their hammers or the nuances of their nails; they need to become better carpenters. The magic we’re looking for is in the work we’re avoiding.I'm not totally sold by this argument in the aggregate ; we won’t all collectively become better craftspeople unless someone invents better hammers and nails. For individuals, though, tooling probably is a much lower order bit than skill, and talking about tooling is a form of technological bikeshedding . It's a science project; a hobby; an indulgence; an escape from the hard and often unpleasant work of dealing with people and corporate politics .So, to summarize, there are two pieces of learned wisdom about technology and skills:"
what are some key lessons to keep in mind when choosing technology tools for your business?,"So, to summarize, there are two pieces of learned wisdom about technology and skills:Don't get locked in to one vendor or tool, because you might want to use a different one later.Don’t worry too much about tools, because they aren’t the real solutions to your problems."
What is the best approach to selecting and committing to business tools and technologies?,"Don’t worry too much about tools, because they aren’t the real solutions to your problems.But you see the contradiction? The first piece of advice says to maintain optionality—but the second says that the options you’re protecting are what colors to paint your bike shed. The first point implicitly encourages us to always be optimizing our tooling; the second point says do not get distracted by optimizing your tooling.However, if the second point is the more important one—which I think it is—there’s an easy way to be good at it: Do the opposite of the first point. Choose lock-in. Buy the BI tool; burn the boats behind you ; set your tools in stone. Force yourself to worry about people and process problems by taking away your other temptations."
why is it important to commit to a single software tool,"However, if the second point is the more important one—which I think it is—there’s an easy way to be good at it: Do the opposite of the first point. Choose lock-in. Buy the BI tool; burn the boats behind you ; set your tools in stone. Force yourself to worry about people and process problems by taking away your other temptations.If you’re in the market for some software product and you whittle your options down to a handful of reasonable finalists, all of those tools are probably good enough. Databricks, Snowflake, BigQuery, Synapse—does it really matter which you choose? Will “business outcomes” be materially different because the data team chooses a BI tool that its users give 4.60 stars versus 4.58 ? Or 4.58 versus 4.56 ? 4 How much are those 0.02 stars worth? Are they worth anything at all? Because the ability to move between those products, and upgrade from a 4.56 to a 4.60, is the optionality we’re paying for, in both foregone discounts and in the time we lose to distracting debates and product evaluations.It’s worse than that though, because optionality has an even bigger cost: Stability. If you invest in a single tool, you can probably wring more value out of it than you can by constantly trying to find something that’s marginally better. But people are unlikely to make that investment if they’re always window shopping for an upgrade."
why is stability important when choosing software tools,"It’s worse than that though, because optionality has an even bigger cost: Stability. If you invest in a single tool, you can probably wring more value out of it than you can by constantly trying to find something that’s marginally better. But people are unlikely to make that investment if they’re always window shopping for an upgrade.Imagine a luxury apartment that’s leased by two people who are only committed to it until a better place comes on the market, and only committed to each other until they move. Now imagine a more pedestrian condo that a married couple owns. Which space is better? Imagine a college basketball team of one-and-done freshmen who will be NBA lottery picks. Now imagine one full of future insurance salesmen who’ve been playing together for several years . Which team is better ?In both cases, the stability of the latter option is at least arguably better than the talent of the former. And these are extreme cases, of college teams full of 1- and 2-star recruits versus 4- and 5-star recruits. When we buy software, we often sacrifice that stability, so that we can upgrade from a 4.56 star recruit to a 4.6 star recruit."
why is it important to have long-term relationships with software suppliers,"In both cases, the stability of the latter option is at least arguably better than the talent of the former. And these are extreme cases, of college teams full of 1- and 2-star recruits versus 4- and 5-star recruits. When we buy software, we often sacrifice that stability, so that we can upgrade from a 4.56 star recruit to a 4.6 star recruit.There are business examples too. In his 14 key principles for management , W. Edwards Deming recommends that companies “move toward a single supplier for any one item, on a long-term relationship of loyalty and trust.” This is important, Deming says, because quality requires consistency . Multiple suppliers create variability and inconsistency; variable and inconsistent businesses struggle to improve. The same principle likely applies for having multiple software “suppliers.” Migrating between tools—or even just questioning if a tool is right, and always evaluating new ones—is a lot more disruptive than making the most out of something that might be missing a few of the latest features.The two main arguments against these sorts of long-term deals are, one, products can stagnate, and two, vendors can exploit long-term customers because they don’t need to earn their business anymore."
what are the pros and cons of long-term vendor contracts,"The two main arguments against these sorts of long-term deals are, one, products can stagnate, and two, vendors can exploit long-term customers because they don’t need to earn their business anymore.Though the first risk is real, it happens more slowly than most people imagine. Microstrategy, a 35-year old BI tool, has a rating of 4.4 stars . 5 Barring some extreme event, like a business collapse or a broken acquisition, most products don’t die overnight.The second risk actually seems backwards. Like Deming suggests, loyal long-term customers have more influence over their suppliers than fickle ones. Google may not need to win Snapchat’s business every year anymore, but Google really needs to win it every five years. As anyone who’s ever sold software before will tell you, it’s not the aggressive negotiators that keep you awake at night; it’s long-term customers who are gradually getting unhappy. Those are the accounts you can’t afford to lose, and the ones you bend over backwards to serve."
Why is it challenging for companies to switch database providers?,"The second risk actually seems backwards. Like Deming suggests, loyal long-term customers have more influence over their suppliers than fickle ones. Google may not need to win Snapchat’s business every year anymore, but Google really needs to win it every five years. As anyone who’s ever sold software before will tell you, it’s not the aggressive negotiators that keep you awake at night; it’s long-term customers who are gradually getting unhappy. Those are the accounts you can’t afford to lose, and the ones you bend over backwards to serve.—One piece of software that companies usually commit to for a while is their database. They may not sign long-term contracts, but databases often become so integrated with other systems that they're impractical to change. To replace BigQuery with Databricks, you have to move all of your data; you have to rewrite thousands of SQL queries written in a BigQuery accent into queries written in a Databricks accent; you have to update all the things that talk to Google’s APIs to now talk to Databricks’ APIs. It’s a pain, and people really try to avoid doing it."
how are companies dealing with database lock-in,"One piece of software that companies usually commit to for a while is their database. They may not sign long-term contracts, but databases often become so integrated with other systems that they're impractical to change. To replace BigQuery with Databricks, you have to move all of your data; you have to rewrite thousands of SQL queries written in a BigQuery accent into queries written in a Databricks accent; you have to update all the things that talk to Google’s APIs to now talk to Databricks’ APIs. It’s a pain, and people really try to avoid doing it.That might be changing? Over the last couple weeks, Databricks and Snowflake announced new commitments to Iceberg , 6 which could make it easier to swap one database with another : 7If you eliminate data lock-in and allow workloads to “travel” between platforms based on cost / performance characteristics, you create a more efficient market for workloads. This allows competition to naturally push prices down over time."
what are the pros and cons of eliminating data lock-in,"If you eliminate data lock-in and allow workloads to “travel” between platforms based on cost / performance characteristics, you create a more efficient market for workloads. This allows competition to naturally push prices down over time.Architecturally, seems great! The parts are more modular. Economically, also great! Lower prices; cheaper migrations. Wonderful. 8Practically, I’m not so sure. More optionality means more suppliers, more wandering eyes, and less stability. Optimizing compute engines and shuffling between databases could be a revolutionary innovation that shifts paradigms by creating seamless integrations across scalable B2B SaaS products —or it could just become another bike shed for us to think about."
what are the challenges and pitfalls of a modular approach in the modern data stack?,"Practically, I’m not so sure. More optionality means more suppliers, more wandering eyes, and less stability. Optimizing compute engines and shuffling between databases could be a revolutionary innovation that shifts paradigms by creating seamless integrations across scalable B2B SaaS products —or it could just become another bike shed for us to think about.A few months ago, I said that the biggest failing of the modern data stack was its ambition to be modular . The theory sounds nice—a bunch of specialized Lego pieces, assembled together to meet exact needs of every customer, working in tightly integrated harmony around standard protocols and languages—but the reality is it’s too many options :The economics never worked and the experience was dysfunctional . Worse still, the belief in modularity helped inflate the bubble, by convincing people—and VCs—that there was space in the market for every specialized wedge."
why is modularity in technology both a blessing and a curse?,"The economics never worked and the experience was dysfunctional . Worse still, the belief in modularity helped inflate the bubble, by convincing people—and VCs—that there was space in the market for every specialized wedge.Maybe we get this one right, and mix-and-match compute engines don’t suffer from these same problems. But the modern data stack shows that optionality creates plenty of problems too: Indecision, second-guessing, and lots of lower order bits to fiddle with. Sometimes, we might be better off just picking one thing and sticking with it .This used to be one of my favorite interview questions:"
"Imagine you are a marketing executive at a major brand like Starbucks. An executive from a popular TV show approaches you with a unique offer: for a certain amount of money, they will place a Starbucks cup in a scene of their highly anticipated final season, ensuring it will be seen by millions and likely go viral. How much would you be willing to pay for this product placement, and what factors would you consider in making your decision?","This used to be one of my favorite interview questions:Imagine that you work for Starbucks. A few weeks into the final season of Game of Thrones, an HBO executive comes to you with an offer.“Look”, they say, “the show has gone to hell . 9 We’ve decided to throw all artistic integrity out the window, and to milk it for as much money as we can. So we’re here to offer you a deal. If you pay us enough money, we’ll leave a Starbucks cup in a shot in one of the final episodes. Ten million people will see it. It will go viral. It will become a meme. Everyone will be talking about Starbucks. Imagine the promotional possibilities. Starkbucks. The winter menu is coming. I don’t know, we obviously can’t write anymore, you’ll think of something good. Anyway. How much are you be willing to pay us to do this?”"
how does product placement work in TV shows and movies,"“Look”, they say, “the show has gone to hell . 9 We’ve decided to throw all artistic integrity out the window, and to milk it for as much money as we can. So we’re here to offer you a deal. If you pay us enough money, we’ll leave a Starbucks cup in a shot in one of the final episodes. Ten million people will see it. It will go viral. It will become a meme. Everyone will be talking about Starbucks. Imagine the promotional possibilities. Starkbucks. The winter menu is coming. I don’t know, we obviously can’t write anymore, you’ll think of something good. Anyway. How much are you be willing to pay us to do this?”What do you offer HBO?I have no idea what the right answer is (the point of the question was to see how people think through it, not to calculate an actual number), but it doesn’t seem like it’d be very much? Product placement ads aren’t very targeted, so the average impression for something like this would likely be a good bit less valuable than the average impression of a search or social media ad."
how effective is product placement in TV shows and movies,"I have no idea what the right answer is (the point of the question was to see how people think through it, not to calculate an actual number), but it doesn’t seem like it’d be very much? Product placement ads aren’t very targeted, so the average impression for something like this would likely be a good bit less valuable than the average impression of a search or social media ad.But what if it could be targeted? What if HBO said they’d only show the Starbucks cup to people who recently went to Starbucks? What if they could offer the same deal to Dunkin’ Donuts, and promised to only show a Dunkin’ cup to people who live within ten miles of a store?We may be getting there. From the New York Times :"
How is AI transforming the advertising industry?,"We may be getting there. From the New York Times :On Monday, TikTok announced a new set of tools that will allow brands to create ads using avatars generated by artificial intelligence that look like real people. There will be two types of avatars, TikTok said in a release. Brands can choose from an array of stock avatars “created from video footage of real paid actors that are licensed for commercial use,” or they can opt for a customizable avatar that could be designed to look like a specific creator.Right now, TikTok is only using generative AI to help advertisers create ads before they serve them. But eventually, surely the same technology will get used to create ads when they serve them. If we can animate a fake avatar to read a transcript, we can animate the same avatar to read a customized transcript that speaks directly to whoever is seeing it. Talk about a product they recently searched for. Speak in their native language. Adjust the avatar’s age and appearance to make them appear as trustworthy as possible to the specific person they’re talking to."
how will generative AI change advertising and content personalization?,"Right now, TikTok is only using generative AI to help advertisers create ads before they serve them. But eventually, surely the same technology will get used to create ads when they serve them. If we can animate a fake avatar to read a transcript, we can animate the same avatar to read a customized transcript that speaks directly to whoever is seeing it. Talk about a product they recently searched for. Speak in their native language. Adjust the avatar’s age and appearance to make them appear as trustworthy as possible to the specific person they’re talking to.And if we do this, why would we stop with content that’s explicitly an ad? Watch a James Bond movie on Netflix, and transform his car into whatever make the people on that account might buy. It’s no longer an Aston Martin; it’s a Toyota Sienna. Do the same for his watch; his suit; his sunglasses.Each of us live in our own version of the internet. First, it was because the internet gave us more options: Rather than everyone getting news from a couple broadcast networks and major newspapers, we could choose the sites and blogs that we liked. Then, it was the ads: Our individual browsing histories followed us around, and we all saw ads that were personalized to our presumed preferences. 10 And more recently, it’s become our feeds: Tiktok, Twitter, and Netflix show us posts and videos that their algorithms think we’ll like."
how has the internet personalized our experiences over time?,"Each of us live in our own version of the internet. First, it was because the internet gave us more options: Rather than everyone getting news from a couple broadcast networks and major newspapers, we could choose the sites and blogs that we liked. Then, it was the ads: Our individual browsing histories followed us around, and we all saw ads that were personalized to our presumed preferences. 10 And more recently, it’s become our feeds: Tiktok, Twitter, and Netflix show us posts and videos that their algorithms think we’ll like.Still, though we might each see a different kaleidoscope of content, each individual piece is consistent. Our online mosaics are manufactured, but other people share some of the same tiles.But maybe not for much longer? After all, why show people a real tile, when a modified one might get them to buy an extra cup of coffee?"
how do companies use pricing strategies to influence consumer behavior,"But maybe not for much longer? After all, why show people a real tile, when a modified one might get them to buy an extra cup of coffee?Or you’ll see a toggle that tells you you can get somewhere between 16 and 30 percent off when you sign an annual contract.This is the software equivalent of a gas station marquee having a cash price and a credit card price. It’s unclear how much Google would charge you if you tried to pay in cash."
how do software pricing models work,"This is the software equivalent of a gas station marquee having a cash price and a credit card price. It’s unclear how much Google would charge you if you tried to pay in cash.That said, most multi-year deals are paid for one year at a time. If you sign a two-year contract in July of 2024, you’re committing to pay for the first year of your contract that month and for the second year of your contract in July of 2025.Ok, but how on earth is G2 calculating the average scores on these pages? They tell the individual scores; you can do the math yourself. And their math is…different."
how reliable are G2 scores for evaluating software products,"Ok, but how on earth is G2 calculating the average scores on these pages? They tell the individual scores; you can do the math yourself. And their math is…different.On one hand, companies game their G2 scores by harassing their best customers in writing reviews, so this is a pretty suspect source. On the other hand, if there’s any signal in these scores at all, Microstrategy is still decaying remarkably slowly. It’s a month older than Taylor Swift !Libraries have three parts:"
what are the main components of a library,"Libraries have three parts:Physical books, on shelves.A scheme for organizing the books, like the Dewey Decimal System."
how do databases organize and retrieve data,"A scheme for organizing the books, like the Dewey Decimal System.Librarians, who use the system to find the books on the shelves.A database is roughly the same thing. There is physical data, stored in files on a drive. The database organizes those files in some manner that makes them easy to retrieve. And when you ask the database for data, a computer uses its organizational scheme to look up the files you asked for. Historically, different databases have used different systems for organizing their shelves—e.g., Redshift might arrange its books alphabetically by author, while Snowflake might order them by length. This meant that compute engines—the librarians—couldn’t share the same physical library of books, because those librarians needed the books to be organized according to whatever version of the Dewey Decimal System they knew how to use."
Can you explain what a database is and how it works?,"A database is roughly the same thing. There is physical data, stored in files on a drive. The database organizes those files in some manner that makes them easy to retrieve. And when you ask the database for data, a computer uses its organizational scheme to look up the files you asked for. Historically, different databases have used different systems for organizing their shelves—e.g., Redshift might arrange its books alphabetically by author, while Snowflake might order them by length. This meant that compute engines—the librarians—couldn’t share the same physical library of books, because those librarians needed the books to be organized according to whatever version of the Dewey Decimal System they knew how to use.Iceberg is an open-source Dewey Decimal System. If everyone agrees to organize their books that way, then different database compute engines could all share one set of books. That would make it much easier for people to choose the right librarians for the right jobs, because they wouldn’t have to rearrange their entire library first.By database, I mean “database compute engine,” because I don’t know what a database is anymore ."
What are the current trends and challenges in the database industry?,"By database, I mean “database compute engine,” because I don’t know what a database is anymore .Cynically, none of this will actually matter that much, because Databricks and Snowflake aren’t collaborating on a new standard; they’re each trying to become the center of the new standard. Though that may create some overlap today, with everyone making a big show about how much they love Iceberg, it seems inevitable that their real goals are to add their own features on top of Iceberg, and then try to convince everyone that their version is the version everyone should standardize around.People are still signing this! Ten people a day! Five years later!"
how should companies handle data breaches and communicate with affected customers,"We are, here at Initech , very sorry that your money is gone. We are sorry that the email addresses and credit card numbers you gave us were sold off down by the docks, and that some Russian hackers stole your identity. The security and confidentiality of your data is our number one priority at Initech, and it is a shame that your information has been compromised. Our team of experts will be happy to assist you in any way we can (provided that you are on our Enterprise or Enterprise+ tier).But it is also important to understand that none of this is our fault. Security is core to our business and our platform ; it is built into every layer of our product. Our company runs on trust , customer trust , your trust , and we take that responsibility very seriously. Our software is secure by default . It is industry-leading , enterprise-grade , state-of-the-art , end-to-end , world-class . We have many badges , certifications , accreditations , and acronyms —TLS 1.2, AES-256, SOC 2, ISO 27001, GDPR, CCPR, GxP, ITAR, IL5 DoD SRG, etc—that demonstrate how we treat your data as if it were our data .So look. We did our part. But if you put 50,000 dollars in a shoebox and hand it to a stranger in a black SUV, that is not on us. If you fell for a phishing email and sent your Gmail password to Fancy Bear , 1 you messed up, not us. And if you use simple passwords and don’t enable multi-factor authentication on your account—which, of course, we strongly recommend that you do—there is only so much we can do to protect you. We make the locks, they are good locks, and we can’t be blamed if you don’t use them properly."
how can companies ensure their customers follow security best practices?,"So look. We did our part. But if you put 50,000 dollars in a shoebox and hand it to a stranger in a black SUV, that is not on us. If you fell for a phishing email and sent your Gmail password to Fancy Bear , 1 you messed up, not us. And if you use simple passwords and don’t enable multi-factor authentication on your account—which, of course, we strongly recommend that you do—there is only so much we can do to protect you. We make the locks, they are good locks, and we can’t be blamed if you don’t use them properly.Because we use our locks properly. We have many reports from outside auditors that confirm this. We have a chief security officer; we have an official “ data protection officer .” We maintain a list of 224 SOC-2 “controls” —password policies for our company Slack, code review standards for our engineers, regular security training programs for employees, a Dropcam in our office, and many others—that are carefully tracked and tediously documented. 2Still, because we are committed to transparent communication , we commissioned an independent investigation to figure out how your money was stolen. Third-party cybersecurity experts found no evidence of a breach of Initech, our systems, or our employees. Instead, your money was stolen because of compromised customer credentials; i.e., someone stole your password; i.e., PEBCAK ; i.e., a skill issue ; i.e, you, not us. You gave your debit card and PIN number to a thief; don’t blame the ATM."
how should companies handle customer complaints about security breaches,"Still, because we are committed to transparent communication , we commissioned an independent investigation to figure out how your money was stolen. Third-party cybersecurity experts found no evidence of a breach of Initech, our systems, or our employees. Instead, your money was stolen because of compromised customer credentials; i.e., someone stole your password; i.e., PEBCAK ; i.e., a skill issue ; i.e, you, not us. You gave your debit card and PIN number to a thief; don’t blame the ATM.In conclusion, we did our job. It’s a shame that this bad thing happened, and we are unhappy about it and all of that. But the most important thing for you to understand here is that it’s not our fault.—"
what are the recent security concerns with cloud storage platforms,"—A couple weeks ago, some hackers stole a bunch of data out of Snowflake :Security researchers say they believe financially motivated cybercriminals have stolen a “significant volume of data” from hundreds of customers hosting their vast banks of data with cloud storage giant Snowflake."
"What are the recent security challenges faced by cloud storage companies like Snowflake, and how are they addressing them?","Security researchers say they believe financially motivated cybercriminals have stolen a “significant volume of data” from hundreds of customers hosting their vast banks of data with cloud storage giant Snowflake.Incident response firm Mandiant, which is working with Snowflake to investigate the recent spate of data thefts, said in a blog post Monday that the two firms have notified around 165 customers that their data may have been stolen.Snowflake, as part of their commitment to transparency , hired third-party cybersecurity experts CrowdStrike and Mandiant to investigate the hack; they “have not identified evidence suggesting this activity was caused by a vulnerability, misconfiguration, or breach of Snowflake’s platform” or “by compromised credentials of current or former Snowflake personnel;” they said it was caused “ compromised customer credentials ” that were “exposed through unrelated cyber threat activity;” they strongly recommend that all account administrators use multi-factor authentication to protect their accounts."
what measures should companies take to ensure cybersecurity and protect customer data,"Snowflake, as part of their commitment to transparency , hired third-party cybersecurity experts CrowdStrike and Mandiant to investigate the hack; they “have not identified evidence suggesting this activity was caused by a vulnerability, misconfiguration, or breach of Snowflake’s platform” or “by compromised credentials of current or former Snowflake personnel;” they said it was caused “ compromised customer credentials ” that were “exposed through unrelated cyber threat activity;” they strongly recommend that all account administrators use multi-factor authentication to protect their accounts.In other words, Snowflake says that they did what any reasonable cloud software vendor would be expected to do. And while it is unfortunate that this happened, the important thing to know is that it wasn’t their fault.—"
who is responsible when a data breach occurs,"—But was it? Was Snowflake to blame? Their customers? Nobody but the hackers themselves? What exactly are we supposed to make of this whole thing? 3On one hand, by all accounts, it doesn’t seem like Snowflake did anything capital-W Wrong. They followed the protocols that they were supposed to follow; they built software according to the standards they were supposed to meet; no Snowflake employee stole anything, left a door open, or told somebody something they shouldn’t have. 4 They were an ATM, and someone stole their customers’ PINs. It is hard to blame the ATM for that."
what are the security challenges associated with cloud-based data warehouses like Snowflake,"On one hand, by all accounts, it doesn’t seem like Snowflake did anything capital-W Wrong. They followed the protocols that they were supposed to follow; they built software according to the standards they were supposed to meet; no Snowflake employee stole anything, left a door open, or told somebody something they shouldn’t have. 4 They were an ATM, and someone stole their customers’ PINs. It is hard to blame the ATM for that.On the other hand, Snowflake did, in a sense, make the ATM popular. Twenty years ago, most databases lived behind firewalls and were only available via VPNs or from approved IP addresses. Corporate data was, almost literally, in a locked vault that you had to physically break into to steal. Today, in part because of Snowflake’s success and its own efforts marketing the benefits of the cloud , people can log into their databases like they would any other website, through a publicly-accessible web page , 5 with a username and password. Snowflake also helped popularize using basic authentication methods like usernames and passwords as the modern standard by which data products connect to databases .In essence, Snowflake and other cloud warehouse vendors moved data out of the firewalled vaults, and into ATMs all over the internet. That’s a design pattern that is fundamentally more vulnerable to certain types of hacks than the prior version. 6 Accordingly, most criticisms of Snowflake aren’t just about Snowflake, but about problems inherent in SaaS software: That simple single-factor authentication is simple to hack. When money is in a bank, you have to rob the bank to get it out. When money is an ATM, you just need to steal some debit cards and phish for people’s PINs. 7"
why are data breaches so common in cloud-based systems,"In essence, Snowflake and other cloud warehouse vendors moved data out of the firewalled vaults, and into ATMs all over the internet. That’s a design pattern that is fundamentally more vulnerable to certain types of hacks than the prior version. 6 Accordingly, most criticisms of Snowflake aren’t just about Snowflake, but about problems inherent in SaaS software: That simple single-factor authentication is simple to hack. When money is in a bank, you have to rob the bank to get it out. When money is an ATM, you just need to steal some debit cards and phish for people’s PINs. 7But! It’s also a design pattern that we like! ATMs are convenient. Multi-factor authentication is annoying . The convenience of the cloud and putting everything on the internet is the world we asked for—and so, it’s a world that Snowflake can give us, without violating any generally accepted accessibility protocols. In 2000, had a company built a database that you could log into from a website and with the password “ password ,” we would probably blame that company if its customers’ accounts got hacked. Now, eh—we may not exonerate the company completely, but we put a lot of the blame on the customers themselves.That’s the thing about data breaches, and about the entire software security industrial complex: It’s not about security; it’s about blame ."
why do companies focus on compliance rather than actual security,"That’s the thing about data breaches, and about the entire software security industrial complex: It’s not about security; it’s about blame .Most companies don’t get have lengthy security pages and pay for tedious compliance reports because they believe that jumping through a bunch of bureaucratic hoops, like logging when every employee was added or removed from Asana, will make anything meaningfully more secure; they jump through those hoops and get those reports so that, if something does go wrong, they can say that it’s not their fault. 8 The probability that companies want to minimize is not the probability of a hack; they want to minimize the probability that they get blamed for a hack . 9 Compliance standards aren’t about security; compliance standards are about liability. 10 And in the two-decade long transition to the cloud, we’ve come to shift the liability for things like bad password policies onto the users and not the vendors.That’s the bet Snowflake made in making things like multi-factor authentication optional—that they ultimately wouldn’t be blamed for a hack like this. As the story escalated, 11 they’ve added the reverse Streisand : Turn a mountain into a molehill by largely doing as little press as possible , 12 and hope the whole thing blows over. Which probably isn’t a bad strategy, at least for the time being. If the important thing is for people not to think that it’s your fault—and in cloud software security, that is and always has been the important thing—you can’t get blamed for something that nobody’s talking about."
why do companies often avoid taking responsibility for security breaches,"That’s the bet Snowflake made in making things like multi-factor authentication optional—that they ultimately wouldn’t be blamed for a hack like this. As the story escalated, 11 they’ve added the reverse Streisand : Turn a mountain into a molehill by largely doing as little press as possible , 12 and hope the whole thing blows over. Which probably isn’t a bad strategy, at least for the time being. If the important thing is for people not to think that it’s your fault—and in cloud software security, that is and always has been the important thing—you can’t get blamed for something that nobody’s talking about.There’s also a broader point here. The entire corporate cybersecurity apparatus is designed to preemptively make the case that whatever went wrong isn’t our fault. But we don’t just do that with security policies. We pre-build this argument—that the important thing for you to know is that it’s not my fault—all the time, and are as frequently motivated by it as we are whatever problem we’re ostensibly trying to solve.For example, when a controversial decision is being made, people will often softly object. They won’t want to change the decision, because then, if something bad happens, it will be their fault. Instead, they will just want to object “for the record”—a record that will likely get forgotten if things go well, but they’ll definitely remember if things go poorly."
why do people avoid taking full responsibility for decisions,"For example, when a controversial decision is being made, people will often softly object. They won’t want to change the decision, because then, if something bad happens, it will be their fault. Instead, they will just want to object “for the record”—a record that will likely get forgotten if things go well, but they’ll definitely remember if things go poorly.For example, when an investor invests in a startup, they will sometimes push CEOs to make certain decisions. They will nudge, cajole, and coerce—but almost never outright instruct. Because they aren’t here to make decisions; they’re here to advise and support. If that advice works out, great, they’re adding value. And if it doesn’t, well, that’s not their fault. The CEO makes the decisions.For example, when an executive asks a data team for some sort of analysis, they’re asking for counsel, but they’re also often asking for a contingency. If the decision goes well , “you can claim credit for your cleverness. If it doesn’t, you can say you just did what any reasonable person would’ve done,” and listened to the data. I played the numbers, and it’s not my fault that we got unlucky."
why do executives rely on data teams for decision-making,"For example, when an executive asks a data team for some sort of analysis, they’re asking for counsel, but they’re also often asking for a contingency. If the decision goes well , “you can claim credit for your cleverness. If it doesn’t, you can say you just did what any reasonable person would’ve done,” and listened to the data. I played the numbers, and it’s not my fault that we got unlucky.Everyone will say that the important thing is winning as a team . And in good times, sure, it is. But people are always looking for ways to buy themselves an insurance policy, because in bad times , the important thing for you to understand is that it isn’t my fault .When stories like the one about Snowflake come out, the first reaction is usually to point fingers. The second is bewilderment: How could they let this happen? How could they have been so unusually careless?"
how do tech companies handle data security,"When stories like the one about Snowflake come out, the first reaction is usually to point fingers. The second is bewilderment: How could they let this happen? How could they have been so unusually careless?Which, oh man, if only. Every tech company presents themselves like Initech, as very serious experts who build bleeding-edge security programs with militaristic discipline. And maybe a few do. But most tech companies are FTX : Full of loose access controls, everything passed around Slack, held together by Scotch tape and bubble gum .Back sometime before the pandemic, the team at Mode used a popular product—let's call it PodesData —that connected directly to Snowflake, which we were using as our primary data warehouse. PodesData had to interact with our data, and was was authorized to do it in the same way as just about every other tool that connects to Snowflake: We created a new Snowflake user called something like THIRD_PARTY_PODESDATA, granted that user access to the data is that PodesData needed to see, and provided that users’s password to PodesData, via some web form inside of their application."
Have you ever had a security scare with a third-party tool?,"Back sometime before the pandemic, the team at Mode used a popular product—let's call it PodesData —that connected directly to Snowflake, which we were using as our primary data warehouse. PodesData had to interact with our data, and was was authorized to do it in the same way as just about every other tool that connects to Snowflake: We created a new Snowflake user called something like THIRD_PARTY_PODESDATA, granted that user access to the data is that PodesData needed to see, and provided that users’s password to PodesData, via some web form inside of their application.A few months later, we had some mundane technical issue that we needed help fixing. We emailed their support team, and an agent started investigating different things that might’ve gone wrong. At some point during the conversation, the agent emailed us a screenshot of what they were seeing “on their side.” The screenshot was of a query the agent had written, directly against our Snowflake database, from inside the Snowflake console .We lost our minds. Because the existence of this screenshot meant three things:"
how did you discover a security breach in your system,"We lost our minds. Because the existence of this screenshot meant three things:The support agent had logged into the Snowflake app with the username and password we gave PodesData. That implied our database password wasn’t locked in some encrypted vault, but was out in the open, available to any enterprising support agent who thought it would be useful to poke around.Once they logged in, the agent had manually written a query and looked at the results. In the screenshot, they were looking at the data we were trying to debug, but they could’ve written whatever query they wanted. They were in our house, and could open whatever drawers they wanted."
"Have you ever experienced or heard about a significant data security breach at a company? How did the company handle it, and what were the consequences?","Once they logged in, the agent had manually written a query and looked at the results. In the screenshot, they were looking at the data we were trying to debug, but they could’ve written whatever query they wanted. They were in our house, and could open whatever drawers they wanted.This had all happened because of an unremarkable issue for an unremarkable customer. A front-line support agent wrote the query. Our ticket hadn’t been escalated to PodesData’s senior staff; the problem wasn’t urgent. This practice, of copying plaintext passwords, logging into customer accounts, and looking at whatever data they deemed useful, wasn’t an exception in an emergency. It was, by all appearances, standard procedure.We threw a tantrum, canceled our contract on the spot, and migrated to a competitor within a few days. But, while this was bad, it wasn't exactly surprising . If you work around startups for a while—or for a few weeks, really—you’ll see dozens of these stories. Of data being passed around encrypted thumb drives. Of passwords accidentally posted in public Github repos. Of unsecured laptops being left at coffee shops. Of every employee having access to production databases that, as we were told by PodesData, they are instructed but technically not required to get permission to use."
Can you share a story about a time when a startup you were involved with faced a significant security issue?,"We threw a tantrum, canceled our contract on the spot, and migrated to a competitor within a few days. But, while this was bad, it wasn't exactly surprising . If you work around startups for a while—or for a few weeks, really—you’ll see dozens of these stories. Of data being passed around encrypted thumb drives. Of passwords accidentally posted in public Github repos. Of unsecured laptops being left at coffee shops. Of every employee having access to production databases that, as we were told by PodesData, they are instructed but technically not required to get permission to use.Every SaaS company has carefully-worded security policies that are written by lawyers. And then they have lived security policies, which are usually “most people don’t know how to write SQL, so it’s probably fine.”I mean, it was an acquihire, right?"
"Why do companies engage in acquihires, and what are some notable examples?","I mean, it was an acquihire, right?For the second year in a row, Databricks announced a billion-dollar acquisition on the first day of their biggest rival’s annual conference. 13 In 2023, Databricks acquired MosaicML, then a two-year old startup that was making a few million dollars a year in revenue, for $1.3 billion. This year, Databricks bought Tabular , which is a piece of database middleware that was attempting to turn an open-source data format into a product, for between one and two billion dollars .Neither deals were traditional nine-figure tech acquisitions, in which an acquirer is looking to buy a mature product, customers, and a revenue stream. Instead, they were both about hiring teams. In MosaicML, Databricks bought a bunch of experienced AI researchers (and some GPUs) in a bet that every enterprise will eventually want to train their own LLM . In Tabular, Databricks bought the architects of a popular open-source framework. When Databricks announced the acquisition, they made absolutely no mention of the Tabular product, its business, or anything that had been created from the day after its founding. By all appearances, Databricks wasn’t interested in the company, its customers, its community, or even a single line of its code. What they wanted was “ the original Iceberg team .”"
why are acquihires becoming more common in the tech industry,"Neither deals were traditional nine-figure tech acquisitions, in which an acquirer is looking to buy a mature product, customers, and a revenue stream. Instead, they were both about hiring teams. In MosaicML, Databricks bought a bunch of experienced AI researchers (and some GPUs) in a bet that every enterprise will eventually want to train their own LLM . In Tabular, Databricks bought the architects of a popular open-source framework. When Databricks announced the acquisition, they made absolutely no mention of the Tabular product, its business, or anything that had been created from the day after its founding. By all appearances, Databricks wasn’t interested in the company, its customers, its community, or even a single line of its code. What they wanted was “ the original Iceberg team .”That’s how the world seems to work in the AI Upside Down we’re currently living in. Acquihires are no longer soft landings; they’re were all the money is.Because businesses can be valued in two ways: Based on their business fundamentals, or based on talent and hype. If you’re valued based on your business, it’s brutal out there . Revenue multiples are at historic lows, and investors punishing companies that are growing slowly ."
why are some startups valued so highly despite having no revenue,"Because businesses can be valued in two ways: Based on their business fundamentals, or based on talent and hype. If you’re valued based on your business, it’s brutal out there . Revenue multiples are at historic lows, and investors punishing companies that are growing slowly .But for companies that are are judged based on their teams, their valuations are effectively uncapped. A viral AI company founded by gold-medalist engineers is worth 2 billion dollars in six months . Another AI startup that has a bunch of employees with low Erdos numbers to “ Attention is All You Need ” (Attention numbers? I don’t know) raised 220 million dollars less than a year after being founded. A company that builds a Jeff Dunham puppet as a chatbot (and is definitely going to get sued by Tesla shareholders ) is worth 18 billion dollars , because Elon Musk.As always, Russ Hanneman was right : If you show revenue, people will ask how much, and it will never be enough. But if you have no revenue, you can be a pure AI play. And right now, no multiple is higher than the Attention number multiple."
how important is revenue for startups seeking investment,"As always, Russ Hanneman was right : If you show revenue, people will ask how much, and it will never be enough. But if you have no revenue, you can be a pure AI play. And right now, no multiple is higher than the Attention number multiple.Aka APT28 aka Pawn Storm aka Sofacy Group aka Sednit aka Tsar Team aka STRONTIUM aka Forest Blizzard aka GRU Unit 26165.Well, sorta, we actually bought some software that did most of it for us in a few weeks. But the important thing is that we have the certificate , right?"
how did Snowflake handle a security breach?,"Well, sorta, we actually bought some software that did most of it for us in a few weeks. But the important thing is that we have the certificate , right?Are we allowed to even ask this question?This isn’t entirely true. An internal account that Snowflake used for customer demos was compromised, because a Snowflake employee appears to have fallen victim to the same hacking campaign that Snowflake’s customers did. However, the information in that internal account wasn’t, it appears, used to hack into any other Snowflake accounts. It’s as though the hackers stole a bunch of PIN numbers from a bank’s customers, including the PIN number for one of the bank’s corporate checking accounts. It’s not a great look, but that PIN number didn’t give them access to anyone else’s PIN numbers."
what are the different types of hacking vulnerabilities,"This isn’t entirely true. An internal account that Snowflake used for customer demos was compromised, because a Snowflake employee appears to have fallen victim to the same hacking campaign that Snowflake’s customers did. However, the information in that internal account wasn’t, it appears, used to hack into any other Snowflake accounts. It’s as though the hackers stole a bunch of PIN numbers from a bank’s customers, including the PIN number for one of the bank’s corporate checking accounts. It’s not a great look, but that PIN number didn’t give them access to anyone else’s PIN numbers.Username: zuck. Password: dadada . No dice.Roughly, there are two types of vulnerabilities: Technical and social. Technical hacks are those that outwit the code itself—it’s like cracking a safe with a drill or by Beautiful Minding the way the safe feels . Social hacks are those that exploit people, like convincing someone that you’re their boss and you need them to send you their email password. Snowflake, and cloud software in general, is probably more technically secure than most self-hosted databases and applications, just as an ATM is probably more physically secure than a safe in someone’s house. But they are almost certainly less socially secure, because all hackers need to do is convince someone to give them their password in something like a fake password reset email."
what are the different types of vulnerabilities in cybersecurity?,"Roughly, there are two types of vulnerabilities: Technical and social. Technical hacks are those that outwit the code itself—it’s like cracking a safe with a drill or by Beautiful Minding the way the safe feels . Social hacks are those that exploit people, like convincing someone that you’re their boss and you need them to send you their email password. Snowflake, and cloud software in general, is probably more technically secure than most self-hosted databases and applications, just as an ATM is probably more physically secure than a safe in someone’s house. But they are almost certainly less socially secure, because all hackers need to do is convince someone to give them their password in something like a fake password reset email.Although, for debit cards, you don’t even need to do that. You can just use “1234,” and you’ll be right 11 percent of the time .Compliance reports also serve the same function for customers. If a vendor gets hacked, the person who bought the software wants to be able to say it’s not their fault either. When Ticketmaster’s CEO calls their CIO into their office and asks how they could’ve let this happen , the CIO can say they did their diligence; Snowflake had all of the right credentials;  blame them ."
why are compliance reports important for companies,"Compliance reports also serve the same function for customers. If a vendor gets hacked, the person who bought the software wants to be able to say it’s not their fault either. When Ticketmaster’s CEO calls their CIO into their office and asks how they could’ve let this happen , the CIO can say they did their diligence; Snowflake had all of the right credentials;  blame them .Imagine that the CEO of a software company has two dials in front of them. One controls the likelihood that their customers’ money and data gets stolen; the other controls the likelihood their company gets blamed for money and data being stolen. Nearly every CEO would set the first dial to 100 percent and the second dial to zero percent before they set both dials to one percent.Although sometimes, it’s about marketing. Does Apple really care that deeply about your privacy? Does Elon Musk ? Probably not. But they can sell privacy as a brand."
why do companies emphasize privacy in their marketing campaigns,"Although sometimes, it’s about marketing. Does Apple really care that deeply about your privacy? Does Elon Musk ? Probably not. But they can sell privacy as a brand.No. I refuse.They have to do some press, because there are often legal and contractual requirements to disclose these sorts of breaches."
how has Silicon Valley culture changed over the years,"In 2012, it was a party. When I moved to Silicon Valley that year, it was no longer a place for nerdy rebels or idealistic misfits, but a place to get rich without feeling guilty about it. After the financial crisis, a generation of country club brats had started questioning if working at McKinsey really was the most prestigious thing that they could do after graduating from Duke, and tech offered a promising alternative. The Nasdaq was on a steady march upwards from its lows in 2009; huge tech IPOs were back ; huge tech acquisitions were back ; Google paid as well as Morgan Stanley, gave you unlimited time off, and didn’t make you work until 8 p.m. if you wanted to eat dinner for free . Back then, you could have it all: Money and status and time off, without being evil , without tucking your shirt in, and without having to leave the office for a couple (dozen) beers.Of course, the whole thing had an ugly underbelly—but the perpetrators of that era’s corporate culture weren't worried about that yet. The prevailing sentiment in most tech offices was optimism. 1 And not for some promising future that we were building, but for the present. It didn’t matter that the old cliché about tech making the world a better place was already a joke , because for much of Silicon Valley, the world was a pretty good place as it was.In 2014, the frat house got raided. The problems in tech’s basement became headlines in the New York Times . Three-character ASCII art and “locker room talk” stopped getting laughs at hack days, and started getting people fired. 2 The working environment inside Github—which, back then, was the pantheon of tech culture; Mecca ; it was every startup’s favorite startup— got its CEO fired . Susan Fowler had a very, very strange year at Uber . It was time to grow up."
how has the tech industry culture evolved over the past decade?,"In 2014, the frat house got raided. The problems in tech’s basement became headlines in the New York Times . Three-character ASCII art and “locker room talk” stopped getting laughs at hack days, and started getting people fired. 2 The working environment inside Github—which, back then, was the pantheon of tech culture; Mecca ; it was every startup’s favorite startup— got its CEO fired . Susan Fowler had a very, very strange year at Uber . It was time to grow up.Moreover, there weren’t just issues with how tech built what it built; what we were building was starting to look problematic too. Taylor Swift went to war against Apple. Amazon no longer felt like the ethical alternative to Walmart . Trump won, and people began to wonder if Facebook had something to do with it.Still, the core promise held: It was prestigious work that paid well. In some ways, the minor reckoning was a good thing for the brand—it was sign of progress, a needed policing of a few bad apples. People began to talk more openly about tech's problems, but few people seemed to entertain working anywhere else."
how has the tech industry evolved over the past decade,"Still, the core promise held: It was prestigious work that paid well. In some ways, the minor reckoning was a good thing for the brand—it was sign of progress, a needed policing of a few bad apples. People began to talk more openly about tech's problems, but few people seemed to entertain working anywhere else.Then, the party was back. A paper by some anonymous libertarian got popular. We were promised digital gold, a self-enforcing legal system, freedom from the tyranny of Janet Yellen, a better way to buy drugs, a way to get rich quick. Nobody quite knew what any of it was for, but a16z liked the idea . A few people got rich; most people got scammed; the two were related .In 2020, a pandemic, and a flash crash—the Nasdaq fell by 31 percent in 33 days, a handful of startups evaporated, and the market was back to setting all-time highs less than 80 days later. Everyone started working out of their bedrooms, got cabin fever , and lost their minds . Venture capitalists unloaded cannons of money as if there was no tomorrow. You could raise a seed round with a pitch deck and a pulse; every series A was ""20 on 100;"" 3 every series B was done by John Curtius . 4 “It’s one ETL tool , Michael, what could it cost ? 1.5 billion dollars?” We were up to our elbows in punch ."
how did the startup ecosystem change during the pandemic?,"In 2020, a pandemic, and a flash crash—the Nasdaq fell by 31 percent in 33 days, a handful of startups evaporated, and the market was back to setting all-time highs less than 80 days later. Everyone started working out of their bedrooms, got cabin fever , and lost their minds . Venture capitalists unloaded cannons of money as if there was no tomorrow. You could raise a seed round with a pitch deck and a pulse; every series A was ""20 on 100;"" 3 every series B was done by John Curtius . 4 “It’s one ETL tool , Michael, what could it cost ? 1.5 billion dollars?” We were up to our elbows in punch .The bowl got yanked away again ; a bank blew up ; venture capitalists lectured everyone about spending as if there was no tomorrow. It was time it sharpen our pencils, and tighten our belts, and trim our fats.But through it all—and even then, in 2022, in the midst of another barrage of layoffs and fire sales—nothing felt fatal. We’d all seen this before; there were no doubts that the sun would rise again tomorrow . We’d get ‘em next year; the boom times would be back; disappointment did not give way to despair. The arena was still a good place to be, and in time, we were destined to be its champions. 5"
how does Silicon Valley handle economic downturns?,"But through it all—and even then, in 2022, in the midst of another barrage of layoffs and fire sales—nothing felt fatal. We’d all seen this before; there were no doubts that the sun would rise again tomorrow . We’d get ‘em next year; the boom times would be back; disappointment did not give way to despair. The arena was still a good place to be, and in time, we were destined to be its champions. 5—In Silicon Valley, there are two sets of physics. The first is the cyclical patterns of the ocean. There are waves: Some technology will be in vogue; others will be out of fashion. Set sail at the right moment and you can find a crest. Plan your voyage wrong, and you get stuck in a storm ."
what are the cyclical patterns in Silicon Valley?,"In Silicon Valley, there are two sets of physics. The first is the cyclical patterns of the ocean. There are waves: Some technology will be in vogue; others will be out of fashion. Set sail at the right moment and you can find a crest. Plan your voyage wrong, and you get stuck in a storm .Work here for a while, though, and you get a feel for the seasons. You can see the waves coming; you figure out how to build a boat that can endure rough waters; you can learn how to read the sky and forecast the weather . Careers in tech aren’t linear, like the slow climb up the corporate ladder at a law firm might be, but they’ve still predictable— and often, predictably good. Keep learning how to sail on this ocean, and you’ll eventually find your wave.Throughout at least the last 12 years, the cycles in Silicon Valley have had this familiar rhythm. There were upbeats and downbeats, but everything stayed in 4/4 time. The debauchery of 2012 had echoes of Liar’s Poker, of my cousins’ stories of Silicon Valley in 1999, and of my classmates’ stories about investment banking in 2006. The first crypto boom was weird, but an eccentric appendage of “core tech,” more financial engineering than software engineering. The mainstream stuff, like SaaS and consumer tech, was still an appealing bet for ambitious entrepreneurs. Throughout the pandemic of 2020 and the profligacy of 2021, the waves got bigger, but they retained their essential physics. And during the bad times of 2022, Silicon Valley’s annoited sages played the usual hits : Hunker down, buckle up, build on, and trust the process ."
how has the rhythm of Silicon Valley changed over the years?,"Throughout at least the last 12 years, the cycles in Silicon Valley have had this familiar rhythm. There were upbeats and downbeats, but everything stayed in 4/4 time. The debauchery of 2012 had echoes of Liar’s Poker, of my cousins’ stories of Silicon Valley in 1999, and of my classmates’ stories about investment banking in 2006. The first crypto boom was weird, but an eccentric appendage of “core tech,” more financial engineering than software engineering. The mainstream stuff, like SaaS and consumer tech, was still an appealing bet for ambitious entrepreneurs. Throughout the pandemic of 2020 and the profligacy of 2021, the waves got bigger, but they retained their essential physics. And during the bad times of 2022, Silicon Valley’s annoited sages played the usual hits : Hunker down, buckle up, build on, and trust the process .It was trite, but seemed basically correct? Even if everything collapsed, the great shroud of the sea would roll on as it rolled five thousand startups ago. We would build another boat and sail on, a little bit wiser about how to navigate whatever storms and swells might be coming next.But now, man, I don't know."
how has the landscape of Silicon Valley changed in the past year,"But now, man, I don't know.—Because in the last year, the second set of physics in Silicon Valley—the foundational laws of the ocean, of the atmosphere, of what floats and what sinks—seem to be breaking down."
why is there a sudden surge in AI-focused startups and investments?,"Because in the last year, the second set of physics in Silicon Valley—the foundational laws of the ocean, of the atmosphere, of what floats and what sinks—seem to be breaking down.We have become obsessed with AI. Fifty percent of the startups in Y Combinator are building around it. Eighty-five percent of tech companies in the S&P 500 are talking about it. Companies are rebranding themselves around it. Snowflake is no longer a database, or The Data Cloud, but the AI Data Cloud™. Asana is the “#1 AI work management platform.” 6 Intercom is AI-first . No, Zendesk is AI-first . 7 We are impaneling conferences about AI; raising venture funds ; 8 starting newsletters; hosting emergency podcasts. This is not an iPhone moment or the next internet , because those things had naysayers . Now, the only debate seems to be about which side of the AI revolution human beings will be on .It’s the crypto gold rush all over again, except the winners are paid in legal tender . It’s the crypto gold rush, except the losers won’t just miss out on some money; they’ll get steamrolled into obsolescence. And so we’re all frantically building new features— 60 percent of one VC’s portfolio is already using generative AI in their product. We’re launching new companies. We’re investing in new startups. We’re turning tech on a dime, all trying to skate where the puck is going."
how is the rise of AI affecting the tech industry?,"It’s the crypto gold rush all over again, except the winners are paid in legal tender . It’s the crypto gold rush, except the losers won’t just miss out on some money; they’ll get steamrolled into obsolescence. And so we’re all frantically building new features— 60 percent of one VC’s portfolio is already using generative AI in their product. We’re launching new companies. We’re investing in new startups. We’re turning tech on a dime, all trying to skate where the puck is going.On the surface, everyone is confident. What they’re selling, you’ll be buying. In an AI-powered future, data quality will be even more critical. Your CRM will be even more critical. Your e-signature management platform will be even more critical. Your useless blog subscriptions will be even more critical. The future is oh so exciting, we say in public.But in private, the vibe is different. Beneath the showy confidence, there’s a shaky unease. Nobody knows where the puck is going. The puck is teleporting. The puck is from another dimension—one in which computers speak English and can’t do math. The puck might get obliterated by GPT-5, and our current standing in the social order might get obliterated with it. We launched the AI features, but nobody uses them ; are we sure we’re made the right bets? Are we sailing on the same ocean, the ocean we’ve spent our careers exploring? Will the the new ocean be better for someone else ? Even if we don’t get outright replaced—which I don’t think is behind the creeping anxiety—are we sure the skills we’ve learned and the boats we’ve built for the old tides will still be seaworthy? Are we sure our new startup is future-proof ? Apple events were fun, a chance to see some cool new gadgets, and to think about ways we could use them. OpenAI events are the reaping . We act excited, but deep down, we’re just hoping to survive."
why is there so much uncertainty in Silicon Valley right now,"But in private, the vibe is different. Beneath the showy confidence, there’s a shaky unease. Nobody knows where the puck is going. The puck is teleporting. The puck is from another dimension—one in which computers speak English and can’t do math. The puck might get obliterated by GPT-5, and our current standing in the social order might get obliterated with it. We launched the AI features, but nobody uses them ; are we sure we’re made the right bets? Are we sailing on the same ocean, the ocean we’ve spent our careers exploring? Will the the new ocean be better for someone else ? Even if we don’t get outright replaced—which I don’t think is behind the creeping anxiety—are we sure the skills we’ve learned and the boats we’ve built for the old tides will still be seaworthy? Are we sure our new startup is future-proof ? Apple events were fun, a chance to see some cool new gadgets, and to think about ways we could use them. OpenAI events are the reaping . We act excited, but deep down, we’re just hoping to survive.Is Silicon Valley back , or is Silicon Valley coming unglued? The old foundations are buckling. It’s the end of software —though notes like these don’t feel like just predictions, but self-affirmations, that if we act like we know what’s coming, we can manifest our own continued relevance. Do we build a team to build a business, or just build a team? The best acquisitions are now acquihires— 650 million dollars for the leadership team of Inflection AI; 1.3 billion dollars for a bunch of GPUs and a team of AI researchers; 150 million dollars for a new CEO ; 1 to 2 billion dollars for the chair of an open-source project.In a founder email list I’m on, more people than ever seem to be eschewing venture capital because they want to build a “real” business, or buy a bunch of cleaning companies and become a micro PE firm. Is happiness in Silicon Valley is no longer a traditional startup, but a bootstrapped business and taking fistfuls on longevity pills? Venture capitalists are also preaching fiscal responsibility. It’s the end of easy money; the age of austerity, the year of efficiency , a time to play to make plan —but also, some French AI startup you’ve never heard of just raised 220 million dollars in a seed round . There are no reliable physics anymore."
what are the current trends and sentiments in Silicon Valley?,"In a founder email list I’m on, more people than ever seem to be eschewing venture capital because they want to build a “real” business, or buy a bunch of cleaning companies and become a micro PE firm. Is happiness in Silicon Valley is no longer a traditional startup, but a bootstrapped business and taking fistfuls on longevity pills? Venture capitalists are also preaching fiscal responsibility. It’s the end of easy money; the age of austerity, the year of efficiency , a time to play to make plan —but also, some French AI startup you’ve never heard of just raised 220 million dollars in a seed round . There are no reliable physics anymore.Get rid of the classic product management , says one founder worth 10 billion dollars. Get rid of management altogether , says another founder worth ten times that. Elon Musk is seceding to Austin . Founders Fund is seceding to Miami . Politics is banned ; politics has Sand Hill Road’s usually chummy cocktail class at each other’s throats . The 2024 election hasn’t even started yet.Is it the end of something? Is some era dead? Are we getting getting eaten ? Is it time to build ? I don’t know. The ocean is changing too quickly; the weather is too unfamiliar. The moment betrays buzzy headlines and showy predictions. Whatever gets made now will likely be upended two or three times before the sea settles down. The best reason to build a boat today may not be to make something that endures, but simply to be out on the ocean, for whenever it finds its rhythm again. Because the water is convulsing in weird ways, and you don’t fight the sea."
how do you navigate uncertain times,"Is it the end of something? Is some era dead? Are we getting getting eaten ? Is it time to build ? I don’t know. The ocean is changing too quickly; the weather is too unfamiliar. The moment betrays buzzy headlines and showy predictions. Whatever gets made now will likely be upended two or three times before the sea settles down. The best reason to build a boat today may not be to make something that endures, but simply to be out on the ocean, for whenever it finds its rhythm again. Because the water is convulsing in weird ways, and you don’t fight the sea.If you’re a famous rapper and you’re in the middle of a very public rap battle with another famous rapper, you have two choices:You can drop a new diss song."
what are the challenges of participating in a rap battle?,"You can drop a new diss song.You can not drop a new diss song.There are your only two choices, and neither are ideal. If you don’t put out a song, people— including the person you’re battling —might call you a coward. This is bad in a rap battle. You cannot win a rap battle without battling in it. 9"
what are the risks and strategies involved in a rap battle?,"There are your only two choices, and neither are ideal. If you don’t put out a song, people— including the person you’re battling —might call you a coward. This is bad in a rap battle. You cannot win a rap battle without battling in it. 9But putting out a song is risky. If people like the song, they’ll make memes about it and you will score a lot of points. This will be good for you and bad for your opponent. If people don’t like the song, however, people will also make memes about it—but they will be bad for you and good for your opponent. Hence the choice, about what to do, if you are in a rap battle: Don’t drop a song and take a guaranteed small loss, or do drop and wait for the internet to decide if you put out a banger or a bomb.Ideally, you wouldn’t have to make this choice. Your best option is option three: Record the song and figure out if people like it before you drop it. Unfortunately, as a famous rapper, you can’t do this. Nothing would lose a rap battle faster than people finding out that you focus grouped your diss song. And you can’t secretly release the song either—everyone knows what your voice sounds like."
what are the challenges famous artists face when releasing new music,"Ideally, you wouldn’t have to make this choice. Your best option is option three: Record the song and figure out if people like it before you drop it. Unfortunately, as a famous rapper, you can’t do this. Nothing would lose a rap battle faster than people finding out that you focus grouped your diss song. And you can’t secretly release the song either—everyone knows what your voice sounds like.Anyway, last week, Drake, who was last seen getting humiliated by Kendrick Lamar in a rap battle, dropped a new song on Soundcloud. Or maybe he didn’t?Late on Monday, the internet exploded with a version of the Plain White T’s moody 2005 hit sung in Caribbean patois in what sounds like Drake‘s voice (but these days, who knows?). The cover, titled “Wah Gwan Delilah” and filled with Toronto references and slang, was uploaded by SoundCloud user Snowd4y and claims to feature Drake."
how is AI changing the music industry?,"Late on Monday, the internet exploded with a version of the Plain White T’s moody 2005 hit sung in Caribbean patois in what sounds like Drake‘s voice (but these days, who knows?). The cover, titled “Wah Gwan Delilah” and filled with Toronto references and slang, was uploaded by SoundCloud user Snowd4y and claims to feature Drake.The track has more than 200,000 plays on SoundCloud and immediately went viral on Twitter. But is it real ?Previously, if you heard a song with Drake’s voice, you wouldn’t wonder if it was Drake or not. Now, with AI, we don’t know anymore. It could be Drake; it could be a random woman in a basement with a Speechify subscription and a Soundcloud account. It could be The Weeknd; it could be ghostwriter997 . It could be Eminem; it could be David Guetta . We used to be able to know if a song was real by listening to it; now, the only way to know it’s real is if person in it tells us that it is."
how is AI changing the music industry?,"Previously, if you heard a song with Drake’s voice, you wouldn’t wonder if it was Drake or not. Now, with AI, we don’t know anymore. It could be Drake; it could be a random woman in a basement with a Speechify subscription and a Soundcloud account. It could be The Weeknd; it could be ghostwriter997 . It could be Eminem; it could be David Guetta . We used to be able to know if a song was real by listening to it; now, the only way to know it’s real is if person in it tells us that it is.But they don’t have to tell the truth. Drake can make a song, release it under some other account, promote it without saying if it’s his , and then decide if he wants to tell people he made it. The flops can be fun fanfic. The hits can be his. But they’re actually all his. 10When people talk about the dangers of AI, they often talk about deep fakes, which are AI-generated images and videos that appear real. As bad as these are, they’re only half the problem. We’ll also have to deal with false fakes. People can now—very plausibly!—claim that something that’s real was made by AI. That dud? Not mine. That embarrassing photo? Adobe Generative Fill and a smear campaign. That hot mic? I never said that."
how will AI impact accountability and trust in the digital age,"When people talk about the dangers of AI, they often talk about deep fakes, which are AI-generated images and videos that appear real. As bad as these are, they’re only half the problem. We’ll also have to deal with false fakes. People can now—very plausibly!—claim that something that’s real was made by AI. That dud? Not mine. That embarrassing photo? Adobe Generative Fill and a smear campaign. That hot mic? I never said that.Though “my account got hacked” was always a suspect excuse for doing something dumb online, it was useful because it could plant a seed of unresolvable doubt. Unless someone admitted that they were lying, you could never prove the negative. “That’s AI-generated” could become the same generic defense—never probable, but now, always possible.The optimism was less widespread in women's bathrooms, whisper networks, and crowdsourced Google docs ."
how has workplace culture changed in the tech industry over the past decade,"The optimism was less widespread in women's bathrooms, whisper networks, and crowdsourced Google docs .Three months before this clown show , roughly the same thing happened at a hack day of a company where I worked. Some guy made a bunch of suggestive jokes that eventually culminated in him unzipping his pants and pulling a rolled up piece of paper out of them; he was fired before the next presentation was over. Which, on one hand, yes, obviously. On the other hand, had he done that a year ago, he probably would’ve gotten a slap on the wrist in public and high fives in private.As in, raise 20 million dollars at a 100 million dollar valuation."
why is the tech industry both appealing and problematic,"As in, raise 20 million dollars at a 100 million dollar valuation.I mean, no, obviously not; this is a joke. But it’s not that much of a joke! Curtius did 250 deals! In five years at Tiger! That’s one a week! He was invested in half—half!—of Forbes’ top 100 cloud companies. That is wild!To be clear, the arena wasn’t a good place for everyone, and lots of people have been badly mistreated in it. But the arena was an overwhelmingly desirable place to be. That’s one of the reasons why tech’s toxic elements are so pernicious: They exclude people from what could otherwise be a very rewarding career."
how has the tech industry evolved over the years,"To be clear, the arena wasn’t a good place for everyone, and lots of people have been badly mistreated in it. But the arena was an overwhelmingly desirable place to be. That’s one of the reasons why tech’s toxic elements are so pernicious: They exclude people from what could otherwise be a very rewarding career.What on earth does that even mean.Which one is first??! Which Joe’s is the original one????"
What are some common misconceptions about investing in AI?,"Which one is first??! Which Joe’s is the original one????These funds invest in AI, not CSS.Or maybe you can?"
how does dbt work in data modeling?,"One way to think about a dbt model is that it’s a table. It’s easy to think this, because most dbt models do, literally, create tables in a database. A company might have a products table that’s imported from their inventory management system, a charges table that’s imported from their Stripe account, and a dbt model called orders that combines the two into a table that contains details about anything anyone ever bought from the company. That dbt model will be a SQL query; the output of the SQL query will be a table.But another way to think about a dbt model is that it’s a function . The data team is trying to create something—in this case, a list of everything the company has ever sold—and the orders model takes two tables as inputs and produces a new table as its output. The model is a formula that contains a bunch of computational logic that describes how to do that calculation.A dbt project, then, is roughly analogous to a program. Each model is a function. The functions can reference one another. And the functions’ authors layer them on top of each other, with the goal of producing a collection of tables 1 that people can use to build dashboards and answer questions."
how has data modeling evolved over the years,"A dbt project, then, is roughly analogous to a program. Each model is a function. The functions can reference one another. And the functions’ authors layer them on top of each other, with the goal of producing a collection of tables 1 that people can use to build dashboards and answer questions.Of course, dbt Labs didn’t invent this sort of data modeling “program.” Prior to dbt, data teams used other tools to manufacture the datasets that people used to build reports and do analysis. But, the previous versions of these programs were hard to write. They were written in languages that are less accessible than SQL; they ran against databases that were relatively slow and relatively easy to break; the production datasets were sometimes complex and confusing objects like OLAP cubes. To create the orders tables in an Oracle Database 10 g in 2004, you had to design a table was legible to Oracle’s BI tool, write your own CREATE statements that produce that table, hand-code things like transaction blocks to make sure your script doesn’t nuke the entire database or send it spiraling into some infinite loop , index your new table correctly, figure out somewhere to deploy the script, and then monitor the whole thing to make sure that a missing shrink operation doesn’t grind your 10 g into useless brick. And if you had lots of models that used your orders table as an input, you had to figure out how to make sure they always run at the right times, in the right order.It was hard. It took time to learn how to do it. One does not simply walk into orders tables; they take the Oracle 2 Day DBA course first."
how has the process of data modeling evolved over time?,"It was hard. It took time to learn how to do it. One does not simply walk into orders tables; they take the Oracle 2 Day DBA course first.The people who took those sorts of courses, however, didn’t just learn technical skills. They also learned about the art of data modeling. They learned how to organize and arrange the various functions in their “program” so that they’d be easy to update. They learned how to design efficient functions that wouldn’t crash the database. They learned how to structure the final datasets that they produced so that they would be easy to use. It wasn’t perfect, by any means, but there was a sense of rigor to the entire exercise. People wrote “ definitive guides ” about it.dbt changed all this—mostly for the better, but a bit for the worse. People could construct data models in pure SQL; they didn’t need to worry about things like transaction blocks or table indexes or DDL; dbt handled the dependency graph between models and made sure everything always ran in order. Moreover, modern databases made everything much more durable—whereas an inefficient model might knock down an old Teradata warehouse or Hadoop cluster, products like Redshift and Snowflake could absorb it."
how has dbt changed data modeling?,"dbt changed all this—mostly for the better, but a bit for the worse. People could construct data models in pure SQL; they didn’t need to worry about things like transaction blocks or table indexes or DDL; dbt handled the dependency graph between models and made sure everything always ran in order. Moreover, modern databases made everything much more durable—whereas an inefficient model might knock down an old Teradata warehouse or Hadoop cluster, products like Redshift and Snowflake could absorb it.On one hand, fantastic. People can now write data modeling “programs” without the headaches of yesteryear. It’s cheaper, faster, and far less tedious. A hard thing became an easy thing.On the other hand, though dbt made data modeling easy, it didn’t make it simple . 2 The goal of the data modeling “program” is still more or less the same today as it was twenty years ago: Bring the meaning of data close to its surface. Transforming some hideous log of web events and mangled Salesforce opportunity records into a useful table that tallies how many active users are in every account is computationally convoluted. There are a lot of logical steps required to write those formulae. While dbt makes it much easier to write each one—each model is just a query, saved in a SQL file—it doesn’t really tell you how to bind them all together. Should you write one query that does it all? Six queries, each with some isolated bit of logic? Six queries, with each referencing a dbt macro ? One choice will make the data modeling “program” efficient and tidy; the other will turn it into a sprawling briar patch of tangled dependencies and tech debt. One will simplify; the other will complect ."
how has dbt changed data modeling?,"On the other hand, though dbt made data modeling easy, it didn’t make it simple . 2 The goal of the data modeling “program” is still more or less the same today as it was twenty years ago: Bring the meaning of data close to its surface. Transforming some hideous log of web events and mangled Salesforce opportunity records into a useful table that tallies how many active users are in every account is computationally convoluted. There are a lot of logical steps required to write those formulae. While dbt makes it much easier to write each one—each model is just a query, saved in a SQL file—it doesn’t really tell you how to bind them all together. Should you write one query that does it all? Six queries, each with some isolated bit of logic? Six queries, with each referencing a dbt macro ? One choice will make the data modeling “program” efficient and tidy; the other will turn it into a sprawling briar patch of tangled dependencies and tech debt. One will simplify; the other will complect .I have no idea which one is which though, partly because this is a toy problem and all made up, and partly because I—like the vast majority of dbt’s other users—were never taught how to write the program. We only learned how to write functions .For a time, every time someone sent a support request into Mode, the customer success manager who owned the account submitting the ticket would get a message on Slack telling them about it. 3 I wrote the code that powered the system. A webhook from Intercom triggered a script in AWS Lambda; that script went back to the Intercom API to retrieve more details about the ticket and called the Salesforce API to get information about the account that the ticket belonged to. A hard-coded if statement inside of the Lambda mapped Mode account reps to their Slack handles. Another function composed a Slack message that mentioned the rep and attached a link to the ticket. A final function sent the message to Slack’s API."
"Can you describe a time when you had to write code or build a system without fully understanding the best practices or frameworks involved? How did you approach the task, and what were the outcomes?","For a time, every time someone sent a support request into Mode, the customer success manager who owned the account submitting the ticket would get a message on Slack telling them about it. 3 I wrote the code that powered the system. A webhook from Intercom triggered a script in AWS Lambda; that script went back to the Intercom API to retrieve more details about the ticket and called the Salesforce API to get information about the account that the ticket belonged to. A hard-coded if statement inside of the Lambda mapped Mode account reps to their Slack handles. Another function composed a Slack message that mentioned the rep and attached a link to the ticket. A final function sent the message to Slack’s API.It “worked.” Slack messages got posted for most support tickets, and most messages mentioned the right rep. But, when an actual engineer—as opposed to me, a pretengineer, a benngineer—opened up the code to make an update, they were horrified. The entire “application” was a disorganized series of Python functions that had been haphazardly glued together into a Rube Goldberg machine of namespace collisions and intertwined logic.I wrote it like this because I understand how to write functions, but I don’t know anything about programming frameworks. Proper Python apps are full of stuff like classes and modules and something called __main__ ; I do not know what any of it means. All I knew was how to jam a bunch of functions together—functions that took way too many inputs, because I didn’t know any other way to pass information from one layer of the program to the next. It was brute-force as software engineering ( BASE )."
how did you learn to build web applications using Python?,"I wrote it like this because I understand how to write functions, but I don’t know anything about programming frameworks. Proper Python apps are full of stuff like classes and modules and something called __main__ ; I do not know what any of it means. All I knew was how to jam a bunch of functions together—functions that took way too many inputs, because I didn’t know any other way to pass information from one layer of the program to the next. It was brute-force as software engineering ( BASE ).—Every time someone goes to www.benn.website , a Python application serves them a webpage. I wrote that application too. It’s a little better than the support Slackbot, but not because I became a better programmer; it’s better because I used Django to build it. Like Ruby on Rails and other web application frameworks, Django both helps you build stuff with Python and is very opinionated in its assistance. You are supposed to put certain parts of your program in specific places, and the app often won’t work if you do it differently. Because of this, benn.website is essentially a script, just like the Mode slackbot, but it’s a script with structure. And whenever I wanted to add something new—for example, “how can I use a single variable to control the primary font on my site?”—the internet (or ChatGPT) won’t just give me the code to do it; it’ll also tell me how to organize it."
how does using Django compare to using dbt for building applications?,"Every time someone goes to www.benn.website , a Python application serves them a webpage. I wrote that application too. It’s a little better than the support Slackbot, but not because I became a better programmer; it’s better because I used Django to build it. Like Ruby on Rails and other web application frameworks, Django both helps you build stuff with Python and is very opinionated in its assistance. You are supposed to put certain parts of your program in specific places, and the app often won’t work if you do it differently. Because of this, benn.website is essentially a script, just like the Mode slackbot, but it’s a script with structure. And whenever I wanted to add something new—for example, “how can I use a single variable to control the primary font on my site?”—the internet (or ChatGPT) won’t just give me the code to do it; it’ll also tell me how to organize it.Roughly, dbt is functions without a framework. There are official best practices , but they’re more suggestions than guardrails—and nobody wants to read the manual anyway. As a dbt project grows, the only thing keeping us from turning it into a spidering web of entangled models and duplicative logic is our own discipline and design sense. Which takes skills many of us never learned, because we never needed to. 4In other words, dbt’s explosive popularity turned a generation of data analysts into analytics pretendgineers . We all figured out ways to create lots of dbt models and glue them all together—dbt is very good at this, it’s very useful, and people are very creative!—but most teams did it in the same way I built the Slackbot: As fragile scripts, full of imaginative workarounds that are a little too creative for their own good. It all works, but man, there’s got to be a better way."
how has dbt changed the role of data analysts,"In other words, dbt’s explosive popularity turned a generation of data analysts into analytics pretendgineers . We all figured out ways to create lots of dbt models and glue them all together—dbt is very good at this, it’s very useful, and people are very creative!—but most teams did it in the same way I built the Slackbot: As fragile scripts, full of imaginative workarounds that are a little too creative for their own good. It all works, but man, there’s got to be a better way.From this blog, last September :There are, I believe, four well-defined categories in the data world. The first three are reasonably well understood: Warehouses, for storing the numbers; BI platforms, for graphing the numbers; and integration tools, for going out and getting the numbers."
what are the main categories in the data world,"There are, I believe, four well-defined categories in the data world. The first three are reasonably well understood: Warehouses, for storing the numbers; BI platforms, for graphing the numbers; and integration tools, for going out and getting the numbers.The fourth category is basically “other.” It’s a giant pileup of somewhat related functions, like data cataloging, governance, lineage, observability, orchestration, transformation, and discovery.From dbt Labs, two weeks ago :"
what are the challenges faced by data teams in using dbt Labs,"From dbt Labs, two weeks ago :As a business decision, sure. dbt Labs was either going to die a hero or become Alteryx; 5 one of those is better for dbt Labs than the other.But these additions don’t really address the lingering problem in dbt’s core: That none of us really know what we’re doing. That we all improvise a bit too much. That the data modeling program that dbt Labs’ new features will orchestrate, observe, and catalog has been poorly architected, by us, and we don’t know how to fix it. 6"
what are the challenges with data modeling in dbt,"But these additions don’t really address the lingering problem in dbt’s core: That none of us really know what we’re doing. That we all improvise a bit too much. That the data modeling program that dbt Labs’ new features will orchestrate, observe, and catalog has been poorly architected, by us, and we don’t know how to fix it. 6Online tutorials, two-day courses, and O’Reilly books won’t teach us how to do it, nor will hand-wringing about the kids these days change today’s kids. Behaviors are shaped by our environment and what that environment lets us do , not the other way around. So long as the big box at the bottom of Slack posts a new message and not a reply, people won’t consistently use threads. If Tesla’s Autopilot Mode lets people zone out when they drive, they won’t be fully attentive drivers, no matter what the warning label says . And if our data modeling programs are going to be efficient and durable, they need to yell at us when we try to write something different.dbt Mesh could be a start, though it’s more of a set of organizational capabilities than opinions. My suspicion is that dbt needs the latter, and it needs something that aggressively imposes those opinions on its users. It needs dbt on Rails: A framework that builds a project’s scaffolding, and tells us how to expand it—and not through education, but through functional requirements. Show where to put which bits of logic. Prevent me from doing circular things. Blare warnings at me when I use macros incorrectly. Force me to rigorously define “ production .”"
how can dbt improve its user experience for data professionals,"dbt Mesh could be a start, though it’s more of a set of organizational capabilities than opinions. My suspicion is that dbt needs the latter, and it needs something that aggressively imposes those opinions on its users. It needs dbt on Rails: A framework that builds a project’s scaffolding, and tells us how to expand it—and not through education, but through functional requirements. Show where to put which bits of logic. Prevent me from doing circular things. Blare warnings at me when I use macros incorrectly. Force me to rigorously define “ production .”When I was stumbling my way through building a Django app, I constantly had questions about how to add new things to it, and I had no idea how to fit them into Django’s conventions. Because it’s 2024, I asked ChatGPT for help: “I have a Django app. I want to create a new page where I push a button that fetches data from an external API and displays it on a page. Can you outline how to do this?”It responds with two things: Sample code, and an outline of how to arrange that code within Django’s organizational framework. The second thing, I found, is actually more useful than the first, because it’s what kept me from turning my app into my Slackbot script. It’s what makes development scalable."
how can dbt be improved to better support financial reporting and data organization,"It responds with two things: Sample code, and an outline of how to arrange that code within Django’s organizational framework. The second thing, I found, is actually more useful than the first, because it’s what kept me from turning my app into my Slackbot script. It’s what makes development scalable.That’s what I want for dbt—either built into dbt Labs, or on top of it, like Django is on Python. I want to ask how I can create a bunch of new financial reporting datasets, and not just be recommended some SQL queries full of commingled logic; I want to be told how to organize all of it too. I want a framework for writing functions on top of my factory for manufacturing tables. 7We talked last week about Equals, the cloud spreadsheet app that now supports writing SQL. Well. Three weeks ago, as part of their Spring 2024 Product Launch , Sigma—a cloud analytics platform that uses a familiar spreadsheet interface to give business users instant access to explore and get insights from their cloud data warehouse—released a ""collaborative environment that makes advanced data science approachable to the business with Python support and a refined SQL experience."" Two days ago, as part of their 2024 Spring Release , Hex—a collaborative environment for advanced data analysis that combines Python support and a refined SQL experience —released a spreadsheet interface and no-code data browsing, which “opens up Hex to a whole new universe of people"" by giving business users instant access to explore and get insights from their cloud data warehouse."
why do companies in the tech industry often end up looking similar to each other over time?,"We talked last week about Equals, the cloud spreadsheet app that now supports writing SQL. Well. Three weeks ago, as part of their Spring 2024 Product Launch , Sigma—a cloud analytics platform that uses a familiar spreadsheet interface to give business users instant access to explore and get insights from their cloud data warehouse—released a ""collaborative environment that makes advanced data science approachable to the business with Python support and a refined SQL experience."" Two days ago, as part of their 2024 Spring Release , Hex—a collaborative environment for advanced data analysis that combines Python support and a refined SQL experience —released a spreadsheet interface and no-code data browsing, which “opens up Hex to a whole new universe of people"" by giving business users instant access to explore and get insights from their cloud data warehouse.We are all born with dreams of being different. We have a special collection of features; a new idea; hope. But customer by customer, contract by negotiated contract, we auction ourselves off to the highest bidder. We amputate our extremities first—a small compromise, here and there, for the greater good. Is it not worth selling a kidney to keep ourselves alive? The money is merely a means to advance the mission.But then we replace a limb, or two, until we finally come for the heart—spreadsheets for notebooks; notebooks for spreadsheets; SQL for analysts; drag-and-drop data visualizations for everyone; whatever you need, just sign the contract. Our bodies, Theseused ; our souls, bankrupted, gradually, then suddenly , when we reanimate ourselves under some tagline—the complete cloud solution for business analytics; human-powered AI; the enterprise intelligence suite—as hideously conjoined as the Frankenstein that lurches out of our development laboratory and into some astroturfed Product Hunt post. Meet our new monster, same as the old monster ."
why do companies pivot their products and strategies,"But then we replace a limb, or two, until we finally come for the heart—spreadsheets for notebooks; notebooks for spreadsheets; SQL for analysts; drag-and-drop data visualizations for everyone; whatever you need, just sign the contract. Our bodies, Theseused ; our souls, bankrupted, gradually, then suddenly , when we reanimate ourselves under some tagline—the complete cloud solution for business analytics; human-powered AI; the enterprise intelligence suite—as hideously conjoined as the Frankenstein that lurches out of our development laboratory and into some astroturfed Product Hunt post. Meet our new monster, same as the old monster .We were promised a second coming. We promised a second coming. There were so many companies ; so many ideas; so many possible revolutions and reinventions. Surely some revelation was at hand. But no. You can outrun death, but you cannot outrun the devil. The beast approaches , and stalking us into oblivion . We stay different and die, or we survive, dissected and recomposed into an integrated end-to-end analytics workflow.There was also an addendum to Hex’s fundraising announcement: They raised more money from Snowflake Ventures. Two weeks before that, Sigma announced the same thing . And sandwiched in between the two, Omni, yet another BI tool, said that they also raised money from Snowflake Ventures."
why is Snowflake investing in other BI tools,"There was also an addendum to Hex’s fundraising announcement: They raised more money from Snowflake Ventures. Two weeks before that, Sigma announced the same thing . And sandwiched in between the two, Omni, yet another BI tool, said that they also raised money from Snowflake Ventures.Sigma and Hex were both already in Snowflake’s portfolio, and the latest investment in Hex wasn’t (at least publicly) part of a bigger round led by other investors. So these deals aren’t about incubating an ecosystem of promising startups, but, it seems, about Snowflake buying their way onto bigger partners’ roadmaps and boxing out competitors from doing the same. I’ve said before that consolidation doesn’t have to come from outright acquisitions, 8 but can come from quid pro quo alliances . That seems like Snowflake’s approach here: In exchange for money and the Snowflake sales team selling Hex and Sigma, the two companies will prioritize building a Snowflake Native App over a Databricks Lakehouse App , or integrate more directly with Snowpark Container Services , or won’t build anything that might dramatically lower how much a customer uses Snowflake. There’s a lot of value as being seen as star around which everyone else resolves, and Snowflake appears intent on keeping other companies in their orbit.Or who knows, maybe now is just a really good time to invest in software ."
how do you differentiate between simple and easy,"Or who knows, maybe now is just a really good time to invest in software .And now, a queryable semantic layer .From Rich Hickey’s famous talk on this subject , simple means the opposite of complex. A straight line is simple; a cursive H is complex. These are objective descriptions. Easy things, by contrast, are near to our abilities. For John Hancock , writing a cursive H was probably easy. It’s a relative description: What is easy for one person might be difficult for another."
what is the difference between simple and easy,"From Rich Hickey’s famous talk on this subject , simple means the opposite of complex. A straight line is simple; a cursive H is complex. These are objective descriptions. Easy things, by contrast, are near to our abilities. For John Hancock , writing a cursive H was probably easy. It’s a relative description: What is easy for one person might be difficult for another.SaaS businesses typically hire customer success managers, or CSMs, to make sure customers get what they need from a product, and to sell them new products when they come up for renewal. Being aware of when a customer submitted a feature request or had a technical issue helped CSMs do both.Photography is a useful analogy here. Back in the day of analog film, people who took a lot of pictures tended to also learn more about the craft of photography. They didn’t have to—the only actual barrier to taking pictures was knowing how to work the camera—but the two got bound together. Why go to the effort of teaching yourself how to use a complex camera and spend money on expensive film if you were going to take bad pictures with it?"
how has digital photography changed the way people approach taking pictures?,"Photography is a useful analogy here. Back in the day of analog film, people who took a lot of pictures tended to also learn more about the craft of photography. They didn’t have to—the only actual barrier to taking pictures was knowing how to work the camera—but the two got bound together. Why go to the effort of teaching yourself how to use a complex camera and spend money on expensive film if you were going to take bad pictures with it?Now, the technical parts of photography are much simpler. “Film” is effectively free. That makes photography much more forgiving, but it also means that a lot of people who don’t know anything about how to take good pictures are going to start taking a lot more of them.I mean, it’s right there ."
how should we measure the success of dbt projects,"I mean, it’s right there .dbt’s newer competitors don’t solve this problem either. SQLMesh, for example, is mostly dbt with better developer ergonomics. That’s useful, and might sell well—we all like ergonomic things—but it sidesteps the core issue: How do we become good designers of the thing we’re building?People, including dbt, tend to measure dbt projects by how many models they have. Which I get; models are the most prominent object in dbt, and are an obvious thing to count. However, that frames dbt in the wrong way. By emphasizing models, we implicitly define dbt as a tool for creating tables. I think it’s more useful to frame dbt as program to create data assets, and dbt models as functions—and we would never count the number of functions in programs. But if we measure in tables, we think in tables."
